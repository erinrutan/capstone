type Event @model @auth(rules: [{allow: public}]) @key(name: "byMember", fields: ["memberID"]) {
  id: ID!
  Name: String!
  Date: AWSDateTime!
  Description: String
  location: String
  memberID: ID!
  AttendedBy: [MemberEvent] @connection(keyName: "byEvent", fields: ["id"])
}

type Member @model @auth(rules: [{allow: public}]) {
  id: ID!
  Name: String!
  PhoneNumber: AWSPhone!
  Email: AWSEmail!
  Status: String!
  SideRowed: String
  Create: [Event] @connection(keyName: "byMember", fields: ["id"])
  Attend: [MemberEvent] @connection(keyName: "byMember", fields: ["id"])
  Biography: String
}

type MemberEvent @model(queries: null) @key(name: "byEvent", fields: ["eventID", "memberID"]) @key(name: "byMember", fields: ["memberID", "eventID"]) @auth(rules: [{allow: public}, {allow: public}]) {
  id: ID!
  eventID: ID!
  memberID: ID!
  event: Event! @connection(fields: ["eventID"])
  member: Member! @connection(fields: ["memberID"])
}
 